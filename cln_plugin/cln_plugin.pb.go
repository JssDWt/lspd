// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.8
// source: cln_plugin.proto

package cln_plugin

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HtlcAccepted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Correlationid uint64     `protobuf:"varint,1,opt,name=correlationid,proto3" json:"correlationid,omitempty"`
	Onion         *Onion     `protobuf:"bytes,2,opt,name=onion,proto3" json:"onion,omitempty"`
	Htlc          *HtlcOffer `protobuf:"bytes,3,opt,name=htlc,proto3" json:"htlc,omitempty"`
}

func (x *HtlcAccepted) Reset() {
	*x = HtlcAccepted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cln_plugin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HtlcAccepted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HtlcAccepted) ProtoMessage() {}

func (x *HtlcAccepted) ProtoReflect() protoreflect.Message {
	mi := &file_cln_plugin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HtlcAccepted.ProtoReflect.Descriptor instead.
func (*HtlcAccepted) Descriptor() ([]byte, []int) {
	return file_cln_plugin_proto_rawDescGZIP(), []int{0}
}

func (x *HtlcAccepted) GetCorrelationid() uint64 {
	if x != nil {
		return x.Correlationid
	}
	return 0
}

func (x *HtlcAccepted) GetOnion() *Onion {
	if x != nil {
		return x.Onion
	}
	return nil
}

func (x *HtlcAccepted) GetHtlc() *HtlcOffer {
	if x != nil {
		return x.Htlc
	}
	return nil
}

type Onion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload           []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	ShortChannelId    uint64 `protobuf:"varint,2,opt,name=short_channel_id,json=shortChannelId,proto3" json:"short_channel_id,omitempty"`
	ForwardAmountMsat uint64 `protobuf:"varint,3,opt,name=forward_amount_msat,json=forwardAmountMsat,proto3" json:"forward_amount_msat,omitempty"`
}

func (x *Onion) Reset() {
	*x = Onion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cln_plugin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Onion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Onion) ProtoMessage() {}

func (x *Onion) ProtoReflect() protoreflect.Message {
	mi := &file_cln_plugin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Onion.ProtoReflect.Descriptor instead.
func (*Onion) Descriptor() ([]byte, []int) {
	return file_cln_plugin_proto_rawDescGZIP(), []int{1}
}

func (x *Onion) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *Onion) GetShortChannelId() uint64 {
	if x != nil {
		return x.ShortChannelId
	}
	return 0
}

func (x *Onion) GetForwardAmountMsat() uint64 {
	if x != nil {
		return x.ForwardAmountMsat
	}
	return 0
}

type HtlcOffer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AmountMsat         uint64 `protobuf:"varint,2,opt,name=amount_msat,json=amountMsat,proto3" json:"amount_msat,omitempty"`
	CltvExpiryRelative uint32 `protobuf:"varint,3,opt,name=cltv_expiry_relative,json=cltvExpiryRelative,proto3" json:"cltv_expiry_relative,omitempty"`
	CltvExpiry         uint32 `protobuf:"varint,4,opt,name=cltv_expiry,json=cltvExpiry,proto3" json:"cltv_expiry,omitempty"`
	PaymentHash        []byte `protobuf:"bytes,5,opt,name=payment_hash,json=paymentHash,proto3" json:"payment_hash,omitempty"`
}

func (x *HtlcOffer) Reset() {
	*x = HtlcOffer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cln_plugin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HtlcOffer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HtlcOffer) ProtoMessage() {}

func (x *HtlcOffer) ProtoReflect() protoreflect.Message {
	mi := &file_cln_plugin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HtlcOffer.ProtoReflect.Descriptor instead.
func (*HtlcOffer) Descriptor() ([]byte, []int) {
	return file_cln_plugin_proto_rawDescGZIP(), []int{2}
}

func (x *HtlcOffer) GetAmountMsat() uint64 {
	if x != nil {
		return x.AmountMsat
	}
	return 0
}

func (x *HtlcOffer) GetCltvExpiryRelative() uint32 {
	if x != nil {
		return x.CltvExpiryRelative
	}
	return 0
}

func (x *HtlcOffer) GetCltvExpiry() uint32 {
	if x != nil {
		return x.CltvExpiry
	}
	return 0
}

func (x *HtlcOffer) GetPaymentHash() []byte {
	if x != nil {
		return x.PaymentHash
	}
	return nil
}

type HtlcResolution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Correlationid uint64 `protobuf:"varint,1,opt,name=correlationid,proto3" json:"correlationid,omitempty"`
	// Types that are assignable to Outcome:
	//	*HtlcResolution_Fail
	//	*HtlcResolution_Continue
	//	*HtlcResolution_ContinueWith
	Outcome isHtlcResolution_Outcome `protobuf_oneof:"outcome"`
}

func (x *HtlcResolution) Reset() {
	*x = HtlcResolution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cln_plugin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HtlcResolution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HtlcResolution) ProtoMessage() {}

func (x *HtlcResolution) ProtoReflect() protoreflect.Message {
	mi := &file_cln_plugin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HtlcResolution.ProtoReflect.Descriptor instead.
func (*HtlcResolution) Descriptor() ([]byte, []int) {
	return file_cln_plugin_proto_rawDescGZIP(), []int{3}
}

func (x *HtlcResolution) GetCorrelationid() uint64 {
	if x != nil {
		return x.Correlationid
	}
	return 0
}

func (m *HtlcResolution) GetOutcome() isHtlcResolution_Outcome {
	if m != nil {
		return m.Outcome
	}
	return nil
}

func (x *HtlcResolution) GetFail() *HtlcFail {
	if x, ok := x.GetOutcome().(*HtlcResolution_Fail); ok {
		return x.Fail
	}
	return nil
}

func (x *HtlcResolution) GetContinue() *HtlcContinue {
	if x, ok := x.GetOutcome().(*HtlcResolution_Continue); ok {
		return x.Continue
	}
	return nil
}

func (x *HtlcResolution) GetContinueWith() *HtlcContinueWith {
	if x, ok := x.GetOutcome().(*HtlcResolution_ContinueWith); ok {
		return x.ContinueWith
	}
	return nil
}

type isHtlcResolution_Outcome interface {
	isHtlcResolution_Outcome()
}

type HtlcResolution_Fail struct {
	Fail *HtlcFail `protobuf:"bytes,2,opt,name=fail,proto3,oneof"`
}

type HtlcResolution_Continue struct {
	Continue *HtlcContinue `protobuf:"bytes,3,opt,name=continue,proto3,oneof"`
}

type HtlcResolution_ContinueWith struct {
	ContinueWith *HtlcContinueWith `protobuf:"bytes,4,opt,name=continue_with,json=continueWith,proto3,oneof"`
}

func (*HtlcResolution_Fail) isHtlcResolution_Outcome() {}

func (*HtlcResolution_Continue) isHtlcResolution_Outcome() {}

func (*HtlcResolution_ContinueWith) isHtlcResolution_Outcome() {}

type HtlcFail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FailureMessage []byte `protobuf:"bytes,1,opt,name=failure_message,json=failureMessage,proto3" json:"failure_message,omitempty"`
}

func (x *HtlcFail) Reset() {
	*x = HtlcFail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cln_plugin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HtlcFail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HtlcFail) ProtoMessage() {}

func (x *HtlcFail) ProtoReflect() protoreflect.Message {
	mi := &file_cln_plugin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HtlcFail.ProtoReflect.Descriptor instead.
func (*HtlcFail) Descriptor() ([]byte, []int) {
	return file_cln_plugin_proto_rawDescGZIP(), []int{4}
}

func (x *HtlcFail) GetFailureMessage() []byte {
	if x != nil {
		return x.FailureMessage
	}
	return nil
}

type HtlcContinue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HtlcContinue) Reset() {
	*x = HtlcContinue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cln_plugin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HtlcContinue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HtlcContinue) ProtoMessage() {}

func (x *HtlcContinue) ProtoReflect() protoreflect.Message {
	mi := &file_cln_plugin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HtlcContinue.ProtoReflect.Descriptor instead.
func (*HtlcContinue) Descriptor() ([]byte, []int) {
	return file_cln_plugin_proto_rawDescGZIP(), []int{5}
}

type HtlcContinueWith struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId []byte `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Payload   []byte `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *HtlcContinueWith) Reset() {
	*x = HtlcContinueWith{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cln_plugin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HtlcContinueWith) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HtlcContinueWith) ProtoMessage() {}

func (x *HtlcContinueWith) ProtoReflect() protoreflect.Message {
	mi := &file_cln_plugin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HtlcContinueWith.ProtoReflect.Descriptor instead.
func (*HtlcContinueWith) Descriptor() ([]byte, []int) {
	return file_cln_plugin_proto_rawDescGZIP(), []int{6}
}

func (x *HtlcContinueWith) GetChannelId() []byte {
	if x != nil {
		return x.ChannelId
	}
	return nil
}

func (x *HtlcContinueWith) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

var File_cln_plugin_proto protoreflect.FileDescriptor

var file_cln_plugin_proto_rawDesc = []byte{
	0x0a, 0x10, 0x63, 0x6c, 0x6e, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x72, 0x0a, 0x0c, 0x48, 0x74, 0x6c, 0x63, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x05, 0x6f, 0x6e, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x4f, 0x6e, 0x69, 0x6f, 0x6e, 0x52,
	0x05, 0x6f, 0x6e, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x04, 0x68, 0x74, 0x6c, 0x63, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x48, 0x74, 0x6c, 0x63, 0x4f, 0x66, 0x66, 0x65, 0x72,
	0x52, 0x04, 0x68, 0x74, 0x6c, 0x63, 0x22, 0x7b, 0x0a, 0x05, 0x4f, 0x6e, 0x69, 0x6f, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6d, 0x73, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x11, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4d,
	0x73, 0x61, 0x74, 0x22, 0xa2, 0x01, 0x0a, 0x09, 0x48, 0x74, 0x6c, 0x63, 0x4f, 0x66, 0x66, 0x65,
	0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6d, 0x73, 0x61, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x73,
	0x61, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x6c, 0x74, 0x76, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x79, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x12, 0x63, 0x6c, 0x74, 0x76, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x74, 0x76, 0x5f, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6c, 0x74, 0x76, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x22, 0xc9, 0x01, 0x0a, 0x0e, 0x48, 0x74, 0x6c,
	0x63, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x63,
	0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x69,
	0x64, 0x12, 0x1f, 0x0a, 0x04, 0x66, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x48, 0x74, 0x6c, 0x63, 0x46, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x04, 0x66, 0x61,
	0x69, 0x6c, 0x12, 0x2b, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x48, 0x74, 0x6c, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x69,
	0x6e, 0x75, 0x65, 0x48, 0x00, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x12,
	0x38, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x5f, 0x77, 0x69, 0x74, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x48, 0x74, 0x6c, 0x63, 0x43, 0x6f, 0x6e,
	0x74, 0x69, 0x6e, 0x75, 0x65, 0x57, 0x69, 0x74, 0x68, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x6f, 0x6e,
	0x74, 0x69, 0x6e, 0x75, 0x65, 0x57, 0x69, 0x74, 0x68, 0x42, 0x09, 0x0a, 0x07, 0x6f, 0x75, 0x74,
	0x63, 0x6f, 0x6d, 0x65, 0x22, 0x33, 0x0a, 0x08, 0x48, 0x74, 0x6c, 0x63, 0x46, 0x61, 0x69, 0x6c,
	0x12, 0x27, 0x0a, 0x0f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x66, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x0e, 0x0a, 0x0c, 0x48, 0x74, 0x6c,
	0x63, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x22, 0x4b, 0x0a, 0x10, 0x48, 0x74, 0x6c,
	0x63, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x57, 0x69, 0x74, 0x68, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x32, 0x3d, 0x0a, 0x09, 0x43, 0x6c, 0x6e, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x12, 0x30, 0x0a, 0x0a, 0x48, 0x74, 0x6c, 0x63, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x12, 0x0f, 0x2e, 0x48, 0x74, 0x6c, 0x63, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0x0d, 0x2e, 0x48, 0x74, 0x6c, 0x63, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65,
	0x64, 0x28, 0x01, 0x30, 0x01, 0x42, 0x22, 0x5a, 0x20, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x72, 0x65, 0x65, 0x7a, 0x2f, 0x6c, 0x73, 0x70, 0x64, 0x2f, 0x63,
	0x6c, 0x6e, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_cln_plugin_proto_rawDescOnce sync.Once
	file_cln_plugin_proto_rawDescData = file_cln_plugin_proto_rawDesc
)

func file_cln_plugin_proto_rawDescGZIP() []byte {
	file_cln_plugin_proto_rawDescOnce.Do(func() {
		file_cln_plugin_proto_rawDescData = protoimpl.X.CompressGZIP(file_cln_plugin_proto_rawDescData)
	})
	return file_cln_plugin_proto_rawDescData
}

var file_cln_plugin_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_cln_plugin_proto_goTypes = []interface{}{
	(*HtlcAccepted)(nil),     // 0: HtlcAccepted
	(*Onion)(nil),            // 1: Onion
	(*HtlcOffer)(nil),        // 2: HtlcOffer
	(*HtlcResolution)(nil),   // 3: HtlcResolution
	(*HtlcFail)(nil),         // 4: HtlcFail
	(*HtlcContinue)(nil),     // 5: HtlcContinue
	(*HtlcContinueWith)(nil), // 6: HtlcContinueWith
}
var file_cln_plugin_proto_depIdxs = []int32{
	1, // 0: HtlcAccepted.onion:type_name -> Onion
	2, // 1: HtlcAccepted.htlc:type_name -> HtlcOffer
	4, // 2: HtlcResolution.fail:type_name -> HtlcFail
	5, // 3: HtlcResolution.continue:type_name -> HtlcContinue
	6, // 4: HtlcResolution.continue_with:type_name -> HtlcContinueWith
	3, // 5: ClnPlugin.HtlcStream:input_type -> HtlcResolution
	0, // 6: ClnPlugin.HtlcStream:output_type -> HtlcAccepted
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_cln_plugin_proto_init() }
func file_cln_plugin_proto_init() {
	if File_cln_plugin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cln_plugin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HtlcAccepted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cln_plugin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Onion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cln_plugin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HtlcOffer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cln_plugin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HtlcResolution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cln_plugin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HtlcFail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cln_plugin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HtlcContinue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cln_plugin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HtlcContinueWith); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cln_plugin_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*HtlcResolution_Fail)(nil),
		(*HtlcResolution_Continue)(nil),
		(*HtlcResolution_ContinueWith)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cln_plugin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cln_plugin_proto_goTypes,
		DependencyIndexes: file_cln_plugin_proto_depIdxs,
		MessageInfos:      file_cln_plugin_proto_msgTypes,
	}.Build()
	File_cln_plugin_proto = out.File
	file_cln_plugin_proto_rawDesc = nil
	file_cln_plugin_proto_goTypes = nil
	file_cln_plugin_proto_depIdxs = nil
}
